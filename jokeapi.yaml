openapi: 3.0.3
info:
  title: JokeAPI - OpenAPI 3.0
  description: "JokeAPI is a REST API that serves uniformly and well formatted jokes."
  contact:
    email: rauber@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
externalDocs:
  description: JokeAPI Docs
  url: https://sv443.net/jokeapi/v2/
servers:
  - url: https://v2.jokeapi.dev
tags:
  - name: jokes
    description: JokeAPI
paths:
  /joke/{category}:
    get:
      tags:
        - jokes
      summary: "Joke look-up."
      operationId: getJokes
      parameters:
        - name: category
          in: path
          description: "Joke Category or Categories. (Any, Christmas, Dark, Misc, Programming, Pun, Spooky)"
          required: true
          schema:
            type: array
            items:
              type: string
              enum:
                - Any
                - Christmas
                - Dark
                - Misc
                - Programming
                - Pun
                - Spooky
            minItems: 1
            default: Any
          style: simple
        - name: format
          in: query
          description: "Response format."
          required: false
          schema:
            type: string
            default: json
            enum:
            - json
            - xml
            - yaml
            - txt
        - name: blacklistFlags
          in: query
          description: >-
            If it is used, jokes that match the specified flag(s) will not be served. 
            If you want to use multiple flags, separate them with a comma (,) or a plus sign (+). 
            **nsfw** stands for not safe for work.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum:
              - nsfw
              - religious
              - political
              - racist
              - sexist
              - explicit
        - name: lang
          in: query
          description: "Joke language."
          required: false
          schema:
            type: string
            enum:
            - cs
            - de
            - en
            - es
            - fr
            - pt
        - name: type
          in: query
          description: "Joke type."
          required: false
          schema:
            type: string
            enum:
            - single
            - twopart
        - name: contains
          in: query
          description: >-
            If this parameter is specified, only jokes that contain the 
            value of this parameter will be served (case insensitive).
          required: false
          schema:
            type: string
        - name: idRange
          in: query
          description: >-
            If it is used, you will only get jokes that are inside the specified range of IDs.
            The lower and upper boundary of the ID range needs to be delimited with a minus (-), comma (,) or a plus sign (+). 
            If you only want to get a single joke by its ID, you can also ignore the delimiter and 
            just use the single ID as the value for this parameter.
          required: false
          schema:
            type: string
        - name: amount
          in: query
          description: >-
            If it is used, you will get a certain number of jokes in a single request. 
            If JokeAPI has less jokes than demanded, it will not error out but instead send the maximum amount of jokes it can serve. 
            Maximum possible number is 10 and using an invalid value will make JokeAPI default to 1. 
            The joke format will change from the default when you set the amount parameter to 2 or more.
          required: false
          schema:
            type: integer
        - name: safe-mode
          in: query
          required: false
          schema:
            type: string
            default: "1"
      responses:
        '200':
          $ref: '#/components/responses/OK'
        '400':
          description: "Bad Request"
        '403':
          description: "Forbidden"
        '404':
          description: "Not Found"
        '413':
          description: "Payload Too Large"
        '414':
          description: "URI Too Long"
        '429':
          description: "Too Many Requests"
        '500':
          description: "Internal Server Error"
        '523':
          description: "Origin Unreachable"
components:
  responses:
    OK:
      description: "Ok"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Joke'
  schemas:
    Joke:
      type: object
      properties:
        error:
          type: boolean
        category:
          type: string
        type:
          type: string
        setup:
          type: string
        delivery:
          type: string
        flags:
          type: object
          properties:
            nsfw: 
              type: boolean
            religious:
              type: boolean
            political:
              type: boolean
            racist:
              type: boolean
            sexist: 
              type: boolean
            explicit: 
              type: boolean
        id:
          type: integer
        safe:
          type: boolean
        lang:
          type: string
      xml:
        name: Joke