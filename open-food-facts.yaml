openapi: 3.0.3
info:
  title: Open Food Facts - Open API
  description: |
    The Open Food Facts API allows you to get information
    about registered products and help people make better food choices.
  termsOfService: https://world.openfoodfacts.org/terms-of-use
  contact:
    name: Open Food Facts
    url: https://slack.openfoodfacts.org/
    email: contact@openfoodfacts.org
  license:
    name: 'data: ODbL'
    url: https://opendatacommons.org/licenses/odbl/summary/index.html
  version: '2'
servers:
#  - description: dev
#    url: https://off:off@world.openfoodfacts.net
  - url: https://world.openfoodfacts.org
    description: prod
paths:
  /api/v2/product/{barcode}:
    get:
      tags:
        - Read Requests
      summary: Get information for a specific product by barcode
      parameters:
        - name: barcode
          in: path
          description: |
            The barcode of the product to be fetched. e.g: 3017620422003
          required: true
          style: simple
          explode: false
          schema:
            type: string
            example: '3017620422003'
        - $ref: '#/components/parameters/fields'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      operationId: getProductByBarcode
      
  /api/v2/search:
    get:
      summary: Search for Products
      tags:
        - Read Requests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      operationId: searchProducts
      description: |
        Search request allows you to get the nutritional data of products that match your search criteria.
        If the search query parameter has 2 possible values, they are separated by a comma(,).
        When filtering via a parameter that has different language codes like `fr`, `de` or `en`, specify the language code in the parameter name e.g `categories_tags_en`
      parameters:
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/sort_by'
        - name: additives_tags
          schema:
            type: string
            example: e322
          in: query
          description: "eg: e322"
        - name: allergens_tags
          schema:
            type: string
            example: m
          in: query
          description: "eg: m"
        - name: brands_tags
          schema:
            type: string
            example: ferrero
          in: query
          description: "eg: ferrero"
        - name: categories_tags
          schema:
            type: string
            example: chocolates
          in: query
          description: "eg: chocolates"
        - name: countries_tags
          schema:
            type: string
            example: united-kingdom
          in: query
          description: "eg: united-kingdom"
        - name: emb_codes_tags
          schema:
            type: string
          in: query
        - name: labels_tags
          schema:
            type: string
            example: organic
          in: query
          description: "eg: organic"
        - name: manufacturing_places_tags
          schema:
            type: string
          in: query
        - name: nutrition_grades_tags
          schema:
            type: string
            example: e
          in: query
          description: "eg: e"
        - schema:
            type: string
          in: query
          name: origins_tags
        - schema:
            type: string
          in: query
          name: purchase_places_tags
        - schema:
            type: string
            example: nutrition-facts-completed
          in: query
          name: states_tags
        - schema:
            type: string
            example: aldi
          in: query
          name: stores_tags
        - schema:
            type: string
          in: query
          name: traces_tags
        - schema:
            type: integer
          in: query
          name: page_size
        - schema:
            type: integer
          in: query
          name: page
          description: "1-indexed"
components:
  parameters:
    sort_by:
      schema:
        type: string
        example: product_name
        enum:
          - product_name
          - last_modified_t
          - scans_n
          - unique_scans_n
          - created_t
          - completeness
          - popularity_key
          - nutriscore_score
          - nova_score
          - nothing
          - ecoscore_score
      in: query
      name: sort_by
    fields:
      schema:
        type: string
        example: 'code,product_name,selected_images,nutriments'
      in: query
      name: fields
      description: |
        The fields to be returned, comma separated. eg: code,product_name,nutriments
tags:
  - name: Read Requests
