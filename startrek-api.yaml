openapi: 3.0.3
info:
  title: STAPI
  description: |-
    STAPI, a Star Trek API.
    STAPI serves a read-only model of all things Star Trek, including characters, performers, species, 
    episodes, spacecrafts, books, astronomical objects, video releases, and more.

    - Common properties of request parameters:  
      **pageNumber **is 0-indexed.

  version: 0.1.4
servers:
  - url: https://stapi.co/api
    description: STAPI over secure HTTPS protocol
paths:
  /v1/rest/{resource}:
    get:
      summary: Retrieval of a single resource entity
      operationId: getEntityV1
      parameters:
        - name: resource
          in: path
          required: true
          schema:
            type: string
            enum:
              - animal
              - bookCollection
              - bookSeries
              - character
              - comics
              - comicSeries
              - comicStrip
              - episode
              - food
              - literature
              - magazine
              - magazineSeries
              - material
              - medicalCondition
              - movie
              - organization
              - season
              - series
              - soundtrack
              - tradingCard
              - tradingCardDeck
              - tradingCardSet
              - videoGame
        - name: uid
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/{resource}:
    get:
      summary: Retrieval of a single resource entity
      operationId: getEntityV2
      parameters:
        - name: resource
          in: path
          required: true
          schema:
            type: string
            enum:
              - astronomicalObject
              - book
              - comicCollection
              - company
              - conflict
              - element
              - location
              - occupation
              - performer
              - spacecraft
              - species
              - staff
              - technology
              - title
              - videoRelease
              - weapon
        - name: uid
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v3/rest/{resource}:
    get:
      summary: Retrieval of a single resource entity
      operationId: getEntityV3
      parameters:
        - name: resource
          in: path
          required: true
          schema:
            type: string
            enum:
              - spacecraftClass
        - name: uid
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/{resource}/search:
    get:
      summary: Pagination over entities
      operationId: listEntitiesV1
      parameters:
        - name: resource
          in: path
          required: true
          schema:
            type: string
            enum: 
              - animal
              - bookCollection
              - bookSeries
              - character
              - comics
              - comicCollection
              - comicSeries
              - comicStrip
              - conflict
              - episode
              - food
              - literature
              - magazine
              - magazineSeries
              - material
              - medicalCondition
              - movie
              - organization
              - season
              - series
              - soundtrack
              - tradingCard
              - tradingCardDeck
              - tradingCardSet
              - videoGame
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v2/rest/{resource}/search:
    get:
      summary: Pagination over entities
      operationId: listEntitiesV2
      parameters:
        - name: resource
          in: path
          required: true
          schema:
            type: string
            enum: 
              - astronomicalObject
              - book
              - company
              - element
              - location
              - occupation
              - performer
              - spacecraft
              - spacecraftClass
              - species
              - staff
              - technology
              - title
              - videoRelease
              - weapon
        - name: pageNumber
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/rest/common/dataVersion:
    get:
      tags:
        - DataVersion
      summary: Retrieval of a data version
      operationId: getDataVersion
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataVersion'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    DataVersion:
      required:
        - dataVersion
      type: object
      properties:
        dataVersion:
          type: string
          description: Version of the data served by this STAPI instance
      description: Data version
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
      description: Error object
    